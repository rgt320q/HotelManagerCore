// <auto-generated />
using System;
using DataAccess.Concrete.EFCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccess.Migrations
{
    [DbContext(typeof(MainContext))]
    partial class MainContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entity.Concrete.BaseConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AccommodationFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<decimal>("BreakfastPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DailyAdultFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DailyChildFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DailyGuestFeeForRoom")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DinnerPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("InsertDateTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("LunchPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TaxRateForAccommodation")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TaxRateForKDV")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("baseConfigurations");
                });

            modelBuilder.Entity("Entity.Concrete.Guest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("CarPlate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("GuestNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdentNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("IdentSerialNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InsertDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("MartialStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeOfGuest")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Guests");
                });

            modelBuilder.Entity("Entity.Concrete.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AccommodationFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<decimal>("BreakfastPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DailyAdultFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DailyChildFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DailyGuestFeeForRoom")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DinnerPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DiscountPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("InsertDateTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("LunchPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ReservationId")
                        .HasColumnType("int");

                    b.Property<decimal>("RoomFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TheExtrasPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalAccommodationFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalAccommodationTax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalBreakFastFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalChildFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalDailyAdultFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalDailyGuestFeeForRoom")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalDinnerFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalKdv")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalLunchFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalRoomFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ReservationId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("Entity.Concrete.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("AccommodationType")
                        .HasColumnType("tinyint");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("Adult")
                        .HasColumnType("int");

                    b.Property<DateTime>("ArrivalDate")
                        .HasColumnType("datetime2");

                    b.Property<byte?>("BoardType")
                        .HasColumnType("tinyint");

                    b.Property<bool>("Breakfast")
                        .HasColumnType("bit");

                    b.Property<int>("Children")
                        .HasColumnType("int");

                    b.Property<int>("ChildrenWithFee")
                        .HasColumnType("int");

                    b.Property<byte>("Days")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("DepartureDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Dinner")
                        .HasColumnType("bit");

                    b.Property<int>("GuestTotal")
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("InvoiceFileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Lunch")
                        .HasColumnType("bit");

                    b.Property<string>("ReservationNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("Entity.Concrete.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Dirty")
                        .HasColumnType("bit");

                    b.Property<byte>("DoubleBed")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("InsertDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("PersonTotal")
                        .HasColumnType("tinyint");

                    b.Property<decimal>("Price1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Price2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Price3")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Price4")
                        .HasColumnType("decimal(18,2)");

                    b.Property<byte>("SingleBed")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            Dirty = false,
                            DoubleBed = (byte)0,
                            InsertDateTime = new DateTime(2021, 4, 28, 13, 58, 19, 603, DateTimeKind.Local).AddTicks(5291),
                            Name = "102",
                            PersonTotal = (byte)2,
                            Price1 = 100m,
                            SingleBed = (byte)2,
                            UpdateDateTime = new DateTime(2021, 4, 28, 13, 58, 19, 604, DateTimeKind.Local).AddTicks(4971)
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            Dirty = false,
                            DoubleBed = (byte)1,
                            InsertDateTime = new DateTime(2021, 4, 28, 13, 58, 19, 604, DateTimeKind.Local).AddTicks(7644),
                            Name = "103",
                            PersonTotal = (byte)2,
                            Price1 = 100m,
                            SingleBed = (byte)0,
                            UpdateDateTime = new DateTime(2021, 4, 28, 13, 58, 19, 604, DateTimeKind.Local).AddTicks(7652)
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            Dirty = false,
                            DoubleBed = (byte)1,
                            InsertDateTime = new DateTime(2021, 4, 28, 13, 58, 19, 604, DateTimeKind.Local).AddTicks(8052),
                            Name = "104",
                            PersonTotal = (byte)2,
                            Price1 = 100m,
                            SingleBed = (byte)0,
                            UpdateDateTime = new DateTime(2021, 4, 28, 13, 58, 19, 604, DateTimeKind.Local).AddTicks(8056)
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            Dirty = false,
                            DoubleBed = (byte)0,
                            InsertDateTime = new DateTime(2021, 4, 28, 13, 58, 19, 604, DateTimeKind.Local).AddTicks(8059),
                            Name = "105",
                            PersonTotal = (byte)1,
                            Price1 = 80m,
                            SingleBed = (byte)1,
                            UpdateDateTime = new DateTime(2021, 4, 28, 13, 58, 19, 604, DateTimeKind.Local).AddTicks(8061)
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            Dirty = false,
                            DoubleBed = (byte)1,
                            InsertDateTime = new DateTime(2021, 4, 28, 13, 58, 19, 604, DateTimeKind.Local).AddTicks(8064),
                            Name = "106",
                            PersonTotal = (byte)2,
                            Price1 = 100m,
                            SingleBed = (byte)0,
                            UpdateDateTime = new DateTime(2021, 4, 28, 13, 58, 19, 604, DateTimeKind.Local).AddTicks(8065)
                        },
                        new
                        {
                            Id = 6,
                            Active = true,
                            Dirty = false,
                            DoubleBed = (byte)1,
                            InsertDateTime = new DateTime(2021, 4, 28, 13, 58, 19, 604, DateTimeKind.Local).AddTicks(8068),
                            Name = "107",
                            PersonTotal = (byte)2,
                            Price1 = 100m,
                            SingleBed = (byte)0,
                            UpdateDateTime = new DateTime(2021, 4, 28, 13, 58, 19, 604, DateTimeKind.Local).AddTicks(8070)
                        },
                        new
                        {
                            Id = 7,
                            Active = true,
                            Dirty = false,
                            DoubleBed = (byte)1,
                            InsertDateTime = new DateTime(2021, 4, 28, 13, 58, 19, 604, DateTimeKind.Local).AddTicks(8072),
                            Name = "108",
                            PersonTotal = (byte)2,
                            Price1 = 100m,
                            SingleBed = (byte)0,
                            UpdateDateTime = new DateTime(2021, 4, 28, 13, 58, 19, 604, DateTimeKind.Local).AddTicks(8074)
                        },
                        new
                        {
                            Id = 8,
                            Active = true,
                            Dirty = false,
                            DoubleBed = (byte)1,
                            InsertDateTime = new DateTime(2021, 4, 28, 13, 58, 19, 604, DateTimeKind.Local).AddTicks(8076),
                            Name = "109",
                            PersonTotal = (byte)2,
                            Price1 = 100m,
                            SingleBed = (byte)0,
                            UpdateDateTime = new DateTime(2021, 4, 28, 13, 58, 19, 604, DateTimeKind.Local).AddTicks(8078)
                        },
                        new
                        {
                            Id = 9,
                            Active = true,
                            Dirty = false,
                            DoubleBed = (byte)1,
                            InsertDateTime = new DateTime(2021, 4, 28, 13, 58, 19, 604, DateTimeKind.Local).AddTicks(8081),
                            Name = "110",
                            PersonTotal = (byte)2,
                            Price1 = 100m,
                            SingleBed = (byte)0,
                            UpdateDateTime = new DateTime(2021, 4, 28, 13, 58, 19, 604, DateTimeKind.Local).AddTicks(8082)
                        },
                        new
                        {
                            Id = 10,
                            Active = true,
                            Dirty = false,
                            DoubleBed = (byte)1,
                            InsertDateTime = new DateTime(2021, 4, 28, 13, 58, 19, 604, DateTimeKind.Local).AddTicks(8085),
                            Name = "101",
                            PersonTotal = (byte)2,
                            Price1 = 100m,
                            SingleBed = (byte)0,
                            UpdateDateTime = new DateTime(2021, 4, 28, 13, 58, 19, 604, DateTimeKind.Local).AddTicks(8086)
                        });
                });

            modelBuilder.Entity("GuestReservation", b =>
                {
                    b.Property<int>("GuestsId")
                        .HasColumnType("int");

                    b.Property<int>("ReservationsId")
                        .HasColumnType("int");

                    b.HasKey("GuestsId", "ReservationsId");

                    b.HasIndex("ReservationsId");

                    b.ToTable("GuestReservation");
                });

            modelBuilder.Entity("ReservationRoom", b =>
                {
                    b.Property<int>("ReservationsId")
                        .HasColumnType("int");

                    b.Property<int>("RoomsId")
                        .HasColumnType("int");

                    b.HasKey("ReservationsId", "RoomsId");

                    b.HasIndex("RoomsId");

                    b.ToTable("ReservationRoom");
                });

            modelBuilder.Entity("Entity.Concrete.Payment", b =>
                {
                    b.HasOne("Entity.Concrete.Reservation", "Reservation")
                        .WithMany("Payments")
                        .HasForeignKey("ReservationId");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("GuestReservation", b =>
                {
                    b.HasOne("Entity.Concrete.Guest", null)
                        .WithMany()
                        .HasForeignKey("GuestsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity.Concrete.Reservation", null)
                        .WithMany()
                        .HasForeignKey("ReservationsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ReservationRoom", b =>
                {
                    b.HasOne("Entity.Concrete.Reservation", null)
                        .WithMany()
                        .HasForeignKey("ReservationsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity.Concrete.Room", null)
                        .WithMany()
                        .HasForeignKey("RoomsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Entity.Concrete.Reservation", b =>
                {
                    b.Navigation("Payments");
                });
#pragma warning restore 612, 618
        }
    }
}
